{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/scripts/models/factories/ship.js","webpack:///./src/scripts/models/factories/helper.js","webpack:///./src/scripts/models/factories/gameBoard.js","webpack:///./src/scripts/models/factories/player.js","webpack:///./src/scripts/views/gameboardView.js","webpack:///./src/scripts/models/factories/draggable.js","webpack:///./src/scripts/models/factories/gamePlay.js","webpack:///./src/scripts/index.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Ship","ship","id","direction","lives","Array","fill","getDirection","changeDirection","getLives","doDamage","index","isSunk","every","life","shipsData","random","Math","floor","randomCoordinates","createArrayOfShipsObj","shipsArray","ships","Gameboard","board","map","placedShips","getCoordinates","y","x","y0","x0","placeShip","valid","checkCoordinates","cells","cell","autoPlace","round","getBoard","receiveHit","areAllShipsPlaced","areAllShipsSunk","autoPlaceShips","allShips","reset","Player","type","getType","getShips","attack","enemyBoard","autoAttack","targetCell","resetShips","gameboardView","draggableShipContainer","document","querySelector","startButton","helpText","p1grid","p2grid","autoPlaceBtn","getElementById","playerSettings","computeGridContainer","resultContainer","winnerText","renderGridCell","status","renderShips","console","log","container","createElement","classList","add","setAttribute","dataset","divs","insertAdjacentHTML","prepend","renderBoard","gridParent","gameboard","textContent","clearGrid","grid","autoPlaceView","startGame","toggle","remove","renderWinner","winner","playAgain","Draggable","player1","p1Board","dShip","indexOfShip","cellEls","getIndexOfDragShip","event","target","draggedShip","dragDrop","shipName","item","indexOf","orientation","addEventListenersDrag","parentElement","removeChild","dragOver","e","preventDefault","dragEnter","dragLeave","dragEnd","shipEls","querySelectorAll","childNodes","addEventListener","Game","player2","p2Board","draggable","ctrlAttack","contains","renderGrids","removeEventListener","renderDragShips","forEach","shipHTMLelement","shipArray","gameStart","resetAndPlayAgain","startBtn","game","gamePlay"],"mappings":"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","file":"js/app.15eab44a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([108,1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// let shipsData = [{ name: 'cruiser', length: 3 }];\n\nconst Ship = (ship) => {\n  const id = ship.name;\n  const length = ship.length;\n  let direction = 'horizontal';\n\n  // method to get direction of ship...\n  const getDirection = () => {\n    return direction;\n  };\n\n  // method for changing direction...\n  const changeDirection = () => {\n    if (direction === 'horizontal') {\n      direction = 'vertical';\n    } else if (direction === 'vertical') {\n      direction = 'horizontal';\n    }\n  };\n  // ship should have as many lives as it is its length\n  const lives = Array(length).fill(null);\n\n  const getLives = () => {\n    return lives;\n  };\n\n  const doDamage = (index) => {\n    lives[index] = 'hit';\n  };\n\n  const isSunk = () => {\n    return lives.every((life) => life === 'hit');\n  };\n  return {\n    id,\n    length,\n    direction,\n    getDirection,\n    changeDirection,\n    getLives,\n    doDamage,\n    lives,\n    isSunk,\n  };\n};\n\nexport default Ship;\n","import Ship from '../factories/ship';\n\nconst shipsData = [\n  { name: 'carrier', length: 3 },\n  { name: 'battleship', length: 4 },\n  { name: 'cruiser', length: 3 },\n  { name: 'submarine', length: 3 },\n  { name: 'destroyer', length: 2 },\n];\n\nconst random = () => {\n  return Math.floor(Math.random() * 10);\n};\n\nconst randomCoordinates = () => {\n  return [random(), random()];\n};\n\nconst createArrayOfShipsObj = (shipsArray) => {\n  let ships = [];\n  for (let i = 0; i < shipsArray.length; i++) {\n    shipsArray[i];\n    ships.push(Ship(shipsArray[i]));\n  }\n  return ships;\n};\n\nexport { shipsData, randomCoordinates, createArrayOfShipsObj };\n","import { shipsData, randomCoordinates } from './helper';\n\nconst Gameboard = () => {\n  // game board should be 10rows x 10cols...\n  let board = Array(10)\n    .fill(null)\n    .map(() => Array(10).fill(null));\n\n  let placedShips = [];\n  const areAllShipsPlaced = () => {\n    if (placedShips.length === shipsData.length) {\n      return true;\n    } else return false;\n  };\n\n  const getBoard = () => {\n    return board;\n  };\n  // when iterating over ships length, change coordinates...\n  const getCoordinates = (y, x, i, direction) => {\n    let y0 = y;\n    let x0 = x + i;\n\n    if (direction === 'vertical') {\n      y0 = y + i;\n      x0 = x;\n    }\n    return [y0, x0];\n  };\n\n  const placeShip = (ship, y, x) => {\n    const direction = ship.getDirection();\n    let valid = checkCoordinates(ship.length, y, x, direction);\n    if (valid === true) {\n      for (let i = 0; i < ship.length; i++) {\n        let [y0, x0] = getCoordinates(y, x, i, direction);\n        board[y0][x0] = { ship, index: i };\n      }\n      placedShips.push(ship);\n      return valid;\n    } else {\n      return valid;\n    }\n  };\n\n  // check if ship fits in the board...\n  const checkCoordinates = (length, y, x, direction) => {\n    const cells = [];\n    for (let i = 0; i < length; i++) {\n      const [y0, x0] = getCoordinates(y, x, i, direction);\n      if (y0 < 10 && x0 < 10) {\n        cells.push(board[y0][x0]);\n      } else {\n        return false;\n      }\n    }\n    return cells.every((cell) => cell === null);\n  };\n\n  const receiveHit = (y, x) => {\n    if (board[y][x] === null) {\n      board[y][x] = 'miss';\n    } else if (board[y][x].ship) {\n      board[y][x].ship.doDamage(board[y][x].index);\n      board[y][x] = 'hit';\n    }\n    return board[y][x];\n  };\n\n  const areAllShipsSunk = () => {\n    return placedShips.every((ship) => ship.isSunk());\n  };\n\n  const autoPlace = (ship) => {\n    const [y, x] = randomCoordinates();\n    const orientation = Math.round(Math.random());\n\n    if (orientation > 0.5) {\n      ship.changeDirection();\n    }\n    const place = placeShip(ship, y, x);\n    if (!place) {\n      autoPlace(ship);\n    }\n  };\n\n  const autoPlaceShips = (allShips) => {\n    for (let i = 0; i < allShips.length; i++) {\n      let ship = allShips[i];\n      autoPlace(ship);\n    }\n  };\n\n  const reset = () => {\n    board = Array(10)\n      .fill(null)\n      .map(() => Array(10).fill(null));\n    placedShips = [];\n  };\n  return {\n    getBoard,\n    placeShip,\n    receiveHit,\n    areAllShipsPlaced,\n    areAllShipsSunk,\n    autoPlaceShips,\n    reset,\n  };\n};\n\nexport default Gameboard;\n","// Create Player.\n// players can take turns playing the game by attacking the enemy Gameboard.\n// The game is played against the computer, so make ‘computer’ players capable of making random plays. The AI does not have to be smart, but it should know whether or not a given move is legal. (i.e. it shouldn’t shoot the same coordinate twice).\nimport { randomCoordinates, createArrayOfShipsObj, shipsData } from './helper';\n\nconst Player = (type = 'human') => {\n  let ships = createArrayOfShipsObj(shipsData);\n\n  const getType = () => {\n    return type;\n  };\n\n  const getShips = () => {\n    return ships;\n  };\n\n  const attack = (y, x, enemyBoard) => {\n    enemyBoard.receiveHit(y, x);\n  };\n\n  const autoAttack = (enemyBoard) => {\n    const [y, x] = randomCoordinates();\n    const targetCell = enemyBoard.getBoard()[y][x];\n    if (targetCell === 'miss' || targetCell === 'hit') {\n      autoAttack(enemyBoard);\n    } else {\n      enemyBoard.receiveHit(y, x);\n    }\n  };\n\n  const resetShips = () => {\n    ships = createArrayOfShipsObj(shipsData);\n  };\n\n  return { getType, attack, autoAttack, getShips, resetShips };\n};\n\nexport default Player;\n","//IIFE for DOM manipulation ...\nconst gameboardView = (() => {\n  //DOM elements ...\n  const draggableShipContainer = document.querySelector(\n    '.draggable-ships-container'\n  );\n  const startButton = document.querySelector('.start-button');\n  const helpText = document.querySelector('.help-text');\n  const p1grid = document.querySelector('.player-grid');\n  const p2grid = document.querySelector('.computer-grid');\n  const autoPlaceBtn = document.getElementById('auto-place');\n  const playerSettings = document.querySelector('.player-settings');\n  const computeGridContainer = document.querySelector(\n    '.computer-grid-container'\n  );\n  const resultContainer = document.querySelector('.winner-container');\n  const winnerText = document.querySelector('.winner-text');\n\n  const clearGrid = (gridParent) => {\n    gridParent.textContent = '';\n  };\n\n  const renderGridCell = (y, x, status) => {\n    return `<div class=\"grid-cell cell-${y}-${x} ${status}\" data-y=${y} data-x=${x} data-index={}></div>`;\n  };\n\n  const renderBoard = (gridParent, gameboard, type) => {\n    clearGrid(gridParent);\n    const board = gameboard.getBoard();\n    const length = board.length;\n    let grid = '';\n\n    for (let i = 0; i < length; i++) {\n      for (let j = 0; j < length; j++) {\n        let status = board[i][j];\n        if (status === null) {\n          status = '';\n        } else if (status.ship) {\n          if (type === 'human') {\n            status = status.ship.id;\n          } else {\n            status = '';\n          }\n        }\n        grid += renderGridCell(i, j, status);\n      }\n    }\n    gridParent.insertAdjacentHTML('afterbegin', grid);\n  };\n\n  const renderShips = (allShips) => {\n    for (let i = 0; i < allShips.length; i++) {\n      const ship = allShips[i];\n      console.log(ship);\n      const container = document.createElement('div');\n      container.classList.add('ship', `${ship.id}-container`);\n      container.setAttribute('draggable', true);\n      container.dataset.ship = `${ship.id}`;\n\n      let divs = '';\n      for (let i = 0; i < ship.length; i++) {\n        divs += `<div class=${ship.id} data-index=${i}></div>`;\n      }\n      container.insertAdjacentHTML('afterbegin', divs);\n      draggableShipContainer.prepend(container);\n    }\n  };\n  const autoPlaceView = () => {\n    startButton.classList.add('show');\n    helpText.classList.add('hide');\n    draggableShipContainer.textContent = '';\n  };\n\n  const startGame = () => {\n    p1grid.classList.toggle('grid-disabled');\n    p2grid.classList.toggle('grid-disabled');\n    p2grid.classList.toggle('hide');\n    p2grid.classList.toggle('show');\n    computeGridContainer.classList.toggle('hide');\n    computeGridContainer.classList.toggle('show');\n    startButton.classList.remove('show');\n    autoPlaceBtn.classList.remove('show');\n    playerSettings.classList.toggle('hide');\n  };\n\n  const renderWinner = (winner) => {\n    resultContainer.classList.toggle('hide');\n    resultContainer.classList.toggle('show');\n    winnerText.textContent = `${winner}`;\n  };\n  const playAgain = () => {\n    p1grid.classList.toggle('grid-disabled');\n    p2grid.classList.toggle('grid-disabled');\n    p2grid.classList.toggle('hide');\n    computeGridContainer.classList.toggle('show');\n    computeGridContainer.classList.toggle('hide');\n    p2grid.classList.toggle('show');\n    helpText.classList.toggle('show');\n    helpText.classList.toggle('hide');\n    playerSettings.classList.toggle('hide');\n    resultContainer.classList.toggle('hide');\n    resultContainer.classList.toggle('show');\n  };\n  return {\n    renderShips,\n    renderBoard,\n    autoPlaceView,\n    startGame,\n    renderWinner,\n    playAgain,\n  };\n})();\n\nexport default gameboardView;\n","import gameboardView from '../../views/gameboardView';\n\nconst Draggable = (player1, p1Board) => {\n  const draggableShipContainer = document.querySelector(\n    '.draggable-ships-container'\n  );\n  const startButton = document.querySelector('.start-button');\n  const helpText = document.querySelector('.help-text');\n  const cellEls = document.querySelector('.player-grid');\n  let dShip;\n  let indexOfShip;\n\n  const getIndexOfDragShip = (event) => {\n    indexOfShip = event.target.dataset.index;\n  };\n\n  const draggedShip = (event) => {\n    dShip = event.target;\n  };\n\n  const dragDrop = (event) => {\n    const cell = event.target;\n    const shipName = dShip.dataset.ship;\n    const allShips = player1.getShips();\n    const index = allShips\n      .map((item) => {\n        return item.id;\n      })\n      .indexOf(shipName);\n\n    const ship = allShips[index];\n    const orientation = () => {\n      if (ship.getDirection() === 'horizontal') return true;\n    };\n    let isOrientation = orientation();\n    let x;\n    let y;\n    if (isOrientation) {\n      y = cell.dataset.y;\n      x = cell.dataset.x - indexOfShip;\n    } else {\n      y = cell.dataset.y - indexOfShip;\n      x = cell.dataset.x;\n    }\n\n    const placeShip = p1Board.placeShip(ship, y, x);\n\n    if (placeShip) {\n      gameboardView.renderBoard(cellEls, p1Board, player1.getType());\n      addEventListenersDrag();\n      dShip.parentElement.removeChild(dShip);\n\n      if (p1Board.areAllShipsPlaced()) {\n        startButton.classList.add('show');\n        helpText.classList.add('hide');\n        draggableShipContainer.textContent = '';\n      }\n    }\n  };\n\n  const dragOver = (e) => e.preventDefault();\n  const dragEnter = (e) => e.preventDefault();\n  const dragLeave = () => {};\n  const dragEnd = () => {};\n\n  const addEventListenersDrag = () => {\n    const shipEls = document.querySelectorAll('.ship');\n    const cellEls = document.querySelector('.player-grid');\n    let cells = cellEls.childNodes;\n\n    for (let i = 0; i < shipEls.length; i++) {\n      const ship = shipEls[i];\n      ship.addEventListener('mousedown', getIndexOfDragShip);\n      ship.addEventListener('dragstart', draggedShip);\n      ship.addEventListener('dragend', dragEnd);\n    }\n\n    for (let i = 0; i < cells.length; i++) {\n      let cell = cells[i];\n      cell.addEventListener('dragover', dragOver);\n      cell.addEventListener('dragenter', dragEnter);\n      cell.addEventListener('dragleave', dragLeave);\n      cell.addEventListener('drop', dragDrop);\n    }\n  };\n\n  return { addEventListenersDrag };\n};\n\nexport default Draggable;\n","import Gameboard from './gameBoard';\nimport Player from './player';\nimport gameboardView from '../../views/gameboardView';\nimport Draggable from './draggable';\n// !! drag n drop za shipe\n\nconst Game = () => {\n  const p1grid = document.querySelector('.player-grid');\n  const p2grid = document.querySelector('.computer-grid');\n\n  const player1 = Player('human');\n  const player2 = Player('computer');\n\n  const p1Board = Gameboard();\n  const p2Board = Gameboard();\n\n  const draggable = Draggable(player1, p1Board);\n\n  const addGridEventListeners = () => {\n    p2grid.addEventListener('click', ctrlAttack);\n  };\n\n  const ctrlAttack = (event) => {\n    const cell = event.target;\n    if (cell.classList.contains('grid-cell')) {\n      const y = cell.dataset.y;\n      const x = cell.dataset.x;\n      const enemyBoard = p2Board.getBoard()[y][x];\n      if (enemyBoard !== 'miss' && enemyBoard !== 'hit') {\n        player1.attack(y, x, p2Board);\n        player2.autoAttack(p1Board);\n        renderGrids();\n      }\n\n      if (p1Board.areAllShipsSunk() || p2Board.areAllShipsSunk()) {\n        let winner = '';\n        if (p1Board.areAllShipsSunk()) {\n          winner = 'Computer is winner!';\n        } else if (p2Board.areAllShipsSunk()) {\n          winner = 'Player 1 is winner!';\n        }\n        console.log(winner);\n        p2grid.removeEventListener('click', ctrlAttack);\n        gameboardView.renderWinner(winner);\n      }\n    }\n  };\n\n  const rotateEventListeners = () => {\n    const ships = document.querySelectorAll('.ship');\n    ships.forEach((ship) => {\n      ship.addEventListener('dblclick', (event) => {\n        const shipHTMLelement = event.target.parentElement;\n        const shipArray = player1.getShips();\n        let index = shipArray\n          .map((item) => {\n            return item.id;\n          })\n          .indexOf(shipHTMLelement.dataset.ship);\n        const ship = shipArray[index];\n        ship.changeDirection();\n        shipHTMLelement.classList.toggle('vertical');\n      });\n    });\n  };\n\n  const renderDragShips = () => {\n    gameboardView.renderShips(player1.getShips());\n    draggable.addEventListenersDrag();\n    rotateEventListeners();\n  };\n\n  const renderGrids = () => {\n    gameboardView.renderBoard(p1grid, p1Board, player1.getType());\n    gameboardView.renderBoard(p2grid, p2Board, player2.getType());\n  };\n  const gameStart = () => {\n    addGridEventListeners();\n    p2Board.autoPlaceShips(player2.getShips());\n    gameboardView.startGame();\n  };\n\n  const autoPlace = () => {\n    p1Board.reset();\n    p1Board.autoPlaceShips(player1.getShips());\n    renderGrids();\n    gameboardView.autoPlaceView();\n  };\n\n  const resetGame = () => {\n    player1.resetShips();\n    player2.resetShips();\n    p1Board.reset();\n    p2Board.reset();\n  };\n\n  const resetAndPlayAgain = () => {\n    resetGame();\n    renderGrids();\n    gameboardView.playAgain();\n    renderDragShips();\n  };\n\n  return {\n    renderDragShips,\n    renderGrids,\n    autoPlace,\n    gameStart,\n    resetAndPlayAgain,\n  };\n};\n\nexport default Game;\n","import '../styles/index.scss';\nimport gamePlay from './models/factories/gamePlay';\n\nif (process.env.NODE_ENV === 'development') {\n  require('../index.html');\n}\nconst startBtn = document.querySelector('.start-button');\nconst autoPlaceBtn = document.getElementById('auto-place');\nconst playAgain = document.querySelector('.play-again');\n\nlet game = gamePlay();\n\ngame.renderGrids();\ngame.renderDragShips();\nautoPlaceBtn.addEventListener('click', (e) => {\n  game.autoPlace();\n});\n\nstartBtn.addEventListener('click', (e) => {\n  game.gameStart();\n});\n\nplayAgain.addEventListener('click', (e) => {\n  game.resetAndPlayAgain();\n});\n"],"sourceRoot":""}